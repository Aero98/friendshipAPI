export declare function parse(source?: string | undefined): {
	/**
	 * Get raw value of cookie
	 * @param name cookie value to get
	 * @returns the value of cookie name and empty string if it doesn't exist
	 */
	raw(name: string, trimQuoted?: boolean): string;
	has: (key: string) => boolean;
	get: (key: string) => any;
	keys: () => IterableIterator<string>;
	values: () => IterableIterator<any>;
	entries: () => IterableIterator<[string, any]>;
};
/**
 * @param name name for cookie
 * @param value value to be saved as cookie name
 * @param options cookie settings, @see CookieOption type definition
 * @returns the complete 'Set-Cookie' value
 */
export declare function create(name: string, value: string, options?: CookieOption): string;
/**
 * @param values object of string pair as name and value for cookies
 * @param options cookie settings, @see CookieOption type definition
 * @returns array of the complete 'Set-Cookie' values
 */
export declare function bulk(values: Record<string, string>, options?: CookieOption): string[];
/**
 * Automatically remove cookie in browser
 * @param name cookie to expire
 * @returns expiring 'Set-Cookie' value
 */
export declare function remove(name: string): string;
declare type CookieOption = {
	/** Expiry, number in days */
	expires?: number;
	/** MaxAge, number in days */
	maxAge?: number;
	/** Domain, default to current document URL */
	domain?: string;
	/** Path, defaults to '/' */
	path?: string;
	/** HttpOnly, defaults to false */
	secure?: boolean;
	/** HttpOnly, defaults to true */
	httpOnly?: boolean;
	/** SameSite, defaults to 'Strict' */
	sameSite?: 'Strict' | 'Lax' | 'None';
};
export {};
