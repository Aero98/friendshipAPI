/** @returns true if input is not `nullish` or an empty string */
export const exists = (i) => !nullish(i) && i !== '';
/** @returns true if input is `null` or `undefined` */
export const nullish = (i) => i == null;
/** @returns true if input is truthy in general */
export const truthy = (i) => !!i;
// number guards
/** @returns true if input exists or is a number greater than 0 */
export const natural = (i) => (typeof i === 'number' ? i > 0 : exists(i));
/** @returns true if input exists or is a number greater than or equal to 0 */
export const whole = (i) => (typeof i === 'number' ? i >= 0 : exists(i));
// currying utilities
/** @returns negation of the guard function passed, e.g. `not(nullish)` */
export function not(fn) {
	return (i) => !fn(i);
}
